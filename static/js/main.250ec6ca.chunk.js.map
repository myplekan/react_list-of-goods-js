{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHA","SORT_BY_LENGTH","REVERSE","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preraredGoods","sort","good1","good2","localeCompare","length","reverse","gerPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,QAChBC,EAAiB,SACjBC,EAAU,UA4BT,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EA9BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAsB1B,OApBIL,GACFM,EACGC,MAAK,SAACC,EAAOC,GACZ,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKbT,GACFI,EAAcM,UAGTN,EAOcO,CACnBnB,EAAiBM,EAAWE,GAG9B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaN,IAC5BqB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcL,GAAiBK,IAAcH,IAJ7D,iCAUA,wBACEkB,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcJ,GAAkBI,IAAcH,IAJ9D,4BAUA,wBACEkB,QAAS,kBAAOZ,GAAiBD,IACjCc,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAaf,IAJjB,sBAUEF,GAAaE,IACb,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAgB,IAElBa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCrG3CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.250ec6ca.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHA = 'alpha';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction gerPreparedGoods(goods, sortField, reverseField) {\n  const preraredGoods = [...goods];\n\n  if (sortField) {\n    preraredGoods\n      .sort((good1, good2) => {\n        switch (sortField) {\n          case SORT_BY_ALPHA:\n            return good1.localeCompare(good2);\n\n          case SORT_BY_LENGTH:\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      });\n  }\n\n  if (reverseField) {\n    preraredGoods.reverse();\n  }\n\n  return preraredGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n\n  const visibleGoods = gerPreparedGoods(\n    goodsFromServer, sortField, reverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALPHA)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_BY_ALPHA && sortField !== REVERSE,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH && sortField !== REVERSE,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => (setReverseField(!reverseField))}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReverseField(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}